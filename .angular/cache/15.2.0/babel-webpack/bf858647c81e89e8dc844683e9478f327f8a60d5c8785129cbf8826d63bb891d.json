{"ast":null,"code":"import { Item } from 'src/app/models/item';\nimport { Category } from '../../models/category';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/entry.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../around-sdgs-communication/around-sdgs-communication.component\";\nimport * as i6 from \"../navbar/navbar.component\";\nfunction TodoListPageComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", category_r2.id);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"category\", category_r2.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r2.name, \" \");\n  }\n}\nfunction TodoListPageComponent_li_23_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 34)(1, \"img\", 35);\n    i0.ɵɵlistener(\"click\", function TodoListPageComponent_li_23_li_10_Template_img_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const item_r5 = restoredCtx.$implicit;\n      const category_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteItem(item_r5.id, category_r3.id));\n    })(\"keydown.enter\", function TodoListPageComponent_li_23_li_10_Template_img_keydown_enter_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const item_r5 = restoredCtx.$implicit;\n      const category_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.deleteItem(item_r5.id, category_r3.id));\n    })(\"keydown.space\", function TodoListPageComponent_li_23_li_10_Template_img_keydown_space_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const item_r5 = restoredCtx.$implicit;\n      const category_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.deleteItem(item_r5.id, category_r3.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate2(\"id\", \"\", item_r5.name, \"\", item_r5.id, \"\");\n    i0.ɵɵpropertyInterpolate(\"value\", item_r5.id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r5.name, \" \");\n  }\n}\nfunction TodoListPageComponent_li_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 26);\n    i0.ɵɵelement(1, \"a\", 27);\n    i0.ɵɵelementStart(2, \"img\", 28);\n    i0.ɵɵlistener(\"click\", function TodoListPageComponent_li_23_Template_img_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const category_r3 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.deleteCategory(category_r3.id));\n    })(\"keydown.enter\", function TodoListPageComponent_li_23_Template_img_keydown_enter_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const category_r3 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.deleteCategory(category_r3.id));\n    })(\"keydown.space\", function TodoListPageComponent_li_23_Template_img_keydown_space_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const category_r3 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.deleteCategory(category_r3.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" \\u00A0 \");\n    i0.ɵɵelementStart(4, \"span\", 29);\n    i0.ɵɵlistener(\"click\", function TodoListPageComponent_li_23_Template_span_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const category_r3 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.foldUnfoldCategory(category_r3.id));\n    })(\"keydown.enter\", function TodoListPageComponent_li_23_Template_span_keydown_enter_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const category_r3 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.foldUnfoldCategory(category_r3.id));\n    })(\"keydown.space\", function TodoListPageComponent_li_23_Template_span_keydown_space_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const category_r3 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.foldUnfoldCategory(category_r3.id));\n    });\n    i0.ɵɵelement(5, \"img\", 30);\n    i0.ɵɵelementStart(6, \"span\", 31);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 32)(9, \"ul\");\n    i0.ɵɵtemplate(10, TodoListPageComponent_li_23_li_10_Template, 4, 4, \"li\", 33);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const category_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate2(\"id\", \"\", category_r3.name, \"\", category_r3.id, \"\");\n    i0.ɵɵpropertyInterpolate(\"value\", category_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate2(\"href\", \"#\", ctx_r1.mapCategoryNextCategory.get(category_r3).name, \"\", ctx_r1.mapCategoryNextCategory.get(category_r3).id, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"plus_sign\", category_r3.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", category_r3.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"itemsForCategory\", category_r3.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.itemsSortedByCategory.get(category_r3.id));\n  }\n}\nexport let TodoListPageComponent = /*#__PURE__*/(() => {\n  class TodoListPageComponent {\n    // https://angular.io/guide/what-is-angular#components\n    constructor(entryService, router) {\n      this.entryService = entryService;\n      this.router = router;\n      // Used to define a new category\n      this.categoryInputName = '';\n      // Used to define a new item\n      this.selectedCategoryId = 1;\n      this.itemInputName = '';\n      this.allItems = [];\n      this.itemsSortedByCategory = new Map();\n      // Select states\n      this.previouslySelectedId = 0;\n    }\n    ngOnInit() {\n      this.getCategories();\n      this.getItems();\n    }\n    ngOnChanges(changes) {\n      this.getItems();\n      this.createCategoryMap();\n    }\n    addCategory() {\n      // Creating a category object that will be later on translated to JSON and transmitted in an HTTP request.\n      const category = new Category();\n      // category.id is left undefined\n      category.name = this.categoryInputName;\n      if (this.categoryInputName !== '') {\n        this.entryService.addCategory(category).then(data => {\n          console.log('addCategory() called; category object:', data.id + ' , ' + data.name);\n          this.getCategories();\n          this.categoryInputName = '';\n        }, error => {\n          console.log('ssue while adding a category:', error);\n        });\n      }\n    }\n    getCategories() {\n      this.entryService.getCategories().then(data => {\n        this.categories = data;\n        console.log('Getting the categories from the promise.');\n        this.createCategoryMap();\n        console.log('Category map created.');\n      }, error => {\n        console.log('Issue with getting the categories from the promise: ', error);\n      });\n    }\n    createCategoryMap() {\n      this.mapCategoryNextCategory = new Map();\n      const categoryArray = new Array();\n      let index = 0;\n      this.categories.forEach(category => {\n        categoryArray.push(category);\n      });\n      for (let i = 0; i < categoryArray.length; i++) {\n        if (i < categoryArray.length - 1) {\n          this.mapCategoryNextCategory.set(categoryArray[i], categoryArray[i + 1]);\n        } else {\n          this.mapCategoryNextCategory.set(categoryArray[i], categoryArray[0]);\n        }\n        index++;\n      }\n      console.log('this.mapCategoryNextCategory: ', this.mapCategoryNextCategory);\n    }\n    deleteCategory(id) {\n      this.entryService.deleteCategory(id).then(data => {\n        console.log('Category deleted. id:' + id);\n        // Calling on getCategories() to display the updated list.\n        this.getCategories();\n      }, error => {\n        console.log('Issue while deleting a category: ', error);\n      });\n    }\n    foldUnfoldCategory(categoryId) {\n      const toggledElement = document.getElementById('itemsForCategory' + categoryId);\n      if (toggledElement.style.getPropertyValue('visibility') === 'hidden') {\n        this.unfoldCategory(categoryId);\n      } else {\n        this.foldCategory(categoryId);\n      }\n    }\n    unfoldCategory(categoryId) {\n      const toggledElement = document.getElementById('itemsForCategory' + categoryId);\n      toggledElement.style.setProperty('visibility', 'visible');\n      toggledElement.style.setProperty('display', 'block');\n      const iconForTogglingElement = document.getElementById('plus_sign' + categoryId);\n      iconForTogglingElement.setAttribute('aria-expanded', 'true');\n    }\n    foldCategory(categoryId) {\n      const toggledElement = document.getElementById('itemsForCategory' + categoryId);\n      toggledElement.style.setProperty('visibility', 'hidden');\n      toggledElement.style.setProperty('display', 'none');\n      const iconForTogglingElement = document.getElementById('plus_sign' + categoryId);\n      iconForTogglingElement.setAttribute('aria-expanded', 'false');\n    }\n    setAriaExpandedToTrue(elementId) {\n      const element = document.getElementById(elementId);\n      element.setAttribute('aria-expanded', 'true');\n    }\n    setAriaExpandedTFalse(elementId) {\n      const element = document.getElementById(elementId);\n      element.setAttribute('aria-expanded', 'false');\n    }\n    addItem(categoryId) {\n      console.log('Add item for the category: ' + categoryId);\n      const item = new Item();\n      item.id = 1; // Weakness in the code/understanding.\n      item.name = this.itemInputName;\n      item.categoryId = categoryId;\n      if (item.name !== '') {\n        this.entryService.addItem(item, categoryId).then(data => {\n          console.log('Item Added to category id: ' + categoryId);\n          this.setAriaExpandedToTrue('plus_sign' + categoryId);\n          this.getItems();\n          this.router.navigate(['.']);\n          this.itemInputName = '';\n          // Resetting default category to Uncategorized\n          this.selectedCategoryId = 1;\n        }, error => {\n          console.log('Error while adding an item: ', error);\n        });\n      }\n    }\n    getItems() {\n      const goal = 'the list of items.';\n      this.entryService.getItems().then(data => {\n        this.allItems = data;\n        console.log('Getting the list of items:');\n        console.log('Get items: Display of the list of items. Found: ' + this.allItems.length);\n        this.allItems.forEach(element => {\n          console.log('Element in the list', 'id: ' + element.id, 'name: ' + element.name, 'categoryId: ' + element.categoryId);\n        });\n        // Sorting by category id  and storing the items in separated arrays.\n        this.itemsSortedByCategory = new Map();\n        this.allItems.forEach(item => {\n          if (this.itemsSortedByCategory.has(item.categoryId)) {\n            // Getting the array of items already existing for item.categoryId\n            this.itemsSortedByCategory.get(item.categoryId).push(item);\n          } else {\n            // Creating a new structure, and adding\n            const itemsForOneCategory = [];\n            itemsForOneCategory.push(item);\n            this.itemsSortedByCategory.set(item.categoryId, itemsForOneCategory);\n          }\n        });\n        console.log('this.itemsSortedByCategory', this.itemsSortedByCategory);\n      }, error => {\n        console.log('Error getting ' + goal) + ' : ' + error;\n      });\n    }\n    deleteItem(itemId, categoryId) {\n      this.entryService.deleteItem(itemId).then(data => {\n        console.log('Item deleted. id:' + itemId);\n        // Calling on getItems() to display the updated list.\n        this.getItems();\n        this.unfoldCategory(categoryId);\n      }, error => {\n        console.log('Issue while deleting a category: ', error);\n      });\n    }\n    mark_selected(selectedCategoryId) {\n      console.log('mark_selected');\n      let optionElem = document.getElementById('category' + this.previouslySelectedId);\n      optionElem.setAttribute('aria-selected', 'false');\n      optionElem = document.getElementById('category' + selectedCategoryId);\n      optionElem.setAttribute('aria-selected', 'true');\n      const selectElem = document.getElementById('category-to-select-field');\n      selectElem.setAttribute('aria-activedescendant', '+selectedCategoryId+');\n      this.previouslySelectedId = selectedCategoryId;\n    }\n  }\n  TodoListPageComponent.ɵfac = function TodoListPageComponent_Factory(t) {\n    return new (t || TodoListPageComponent)(i0.ɵɵdirectiveInject(i1.EntryService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  TodoListPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TodoListPageComponent,\n    selectors: [[\"app-todo-list-page\"]],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 42,\n    vars: 5,\n    consts: [[\"id\", \"display-area\"], [\"id\", \"addition-area\"], [\"id\", \"new-category-form\"], [\"for\", \"new-category-input-field\", 1, \"text-large\"], [\"role\", \"textbox\", \"aria-label\", \"Name of the category to add, (aria label) \", \"aria-required\", \"true\", \"type\", \"text\", \"id\", \"new-category-input-field\", \"name\", \"new-category-input-field\", \"form\", \"new-category-form\", \"minlength\", \"1\", \"autocomplete\", \"off\", 1, \"text-large\", \"border-04\", \"border-radius-2\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"id\", \"add-category-button\", \"value\", \"Add the category\", 1, \"text-large\", \"border-radius-2\", \"border-03\", 3, \"click\"], [\"id\", \"newItemForm\"], [\"role\", \"listbox\", \"aria-label\", \"Existing categories, (aria label)\", \"aria-required\", \"true\", \"aria-expanded\", \"false\", \"aria-activedescendant\", \"0\", \"id\", \"category-to-select-field\", \"name\", \"category-to-select-field\", 1, \"text-large\", \"border-03\", 3, \"ngModel\", \"ngModelChange\", \"click\", \"change\", \"keydown.enter\", \"keydown.space\"], [\"role\", \"listitem\", \"aria-disabled\", \"true\", \"value\", \"0\", \"default\", \"\", \"id\", \"category0\"], [\"role\", \"listitem\", \"aria-selected\", \"false\", 3, \"value\", \"id\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"item-input-name\", 1, \"text-large\"], [\"role\", \"textbox\", \"aria-label\", \"Name of the item to add, (aria label)\", \"aria-required\", \"true\", \"type\", \"text\", \"id\", \"item-input-name\", \"name\", \"item-input-name\", \"autocomplete\", \"off\", 1, \"text-large\", \"border-03\", \"border-radius-2\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"id\", \"add-item-button\", \"value\", \"Add the item to the category\", 1, \"text-large\", \"border-radius-2\", \"border-03\", 3, \"click\"], [\"id\", \"displayCategories\"], [\"class\", \"category no-list-style\", \"name\", \"aCategory\", 3, \"id\", \"value\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", \"(Hidden), Some communication about permaculture, (aria label)\", \"href\", \"#sdg_com\"], [\"aria-label\", \"(Hidden), Navigation menu,  (aria label)\", \"href\", \"#navbar\"], [\"id\", \"credits\"], [1, \"border-03\"], [\"tabindex\", \"0\"], [\"role\", \"text\", \"aria-label\", \"Page where the garbage can icon comes from, (aria label)\", \"href\", \"https://search.creativecommons.org/photos/c864d368-a8ef-4833-9a97-3a87c651e009\", 2, \"color\", \"black\"], [\"alt\", \"Icon representing a garbage can. (alt text)\", \"src\", \"./assets/pictures/Ic_delete_48px.png\", 1, \"icon-garbage-can-small\"], [\"aria-label\", \"Page where the plus sign icon comes from, (aria label)\", \"href\", \"https://search.creativecommons.org/photos/176fcf70-baf4-4537-a841-0591fb094d12\", 2, \"color\", \"black\"], [\"alt\", \"Icon representing a addition sign.  (alt text)\", \"src\", \"./assets/pictures/256px-Font_Awesome_5_solid_plus-circle.svg.png\", 1, \"icon-plus-small\"], [\"href\", \"https://creativecommons.org/licenses/by/4.0/?ref=ccsearch&atype=rich\"], [\"role\", \"listitem\", \"aria-selected\", \"false\", 3, \"value\", \"id\"], [\"name\", \"aCategory\", 1, \"category\", \"no-list-style\", 3, \"id\", \"value\"], [\"aria-label\", \"(Hidden), Click to reach the next category or the first \\n                    \\tif you reached the end of the list (aria label)\", \"aria-relevant\", \"text\", 3, \"href\"], [\"role\", \"button\", \"alt\", \"Trash can icon used to suppress an empty category (alt text)\", \"tabindex\", \"0\", \"aria-label\", \"Trash can icon used to suppress an item in a category  (aria-label)\", \"name\", \"anIconToDeleteACategory\", \"src\", \"./assets/pictures/Ic_delete_48px.png\", 1, \"icon-garbage-can\", \"border-02\", 3, \"click\", \"keydown.enter\", \"keydown.space\"], [1, \"foldUnfoldClickArea\", 3, \"click\", \"keydown.enter\", \"keydown.space\"], [\"role\", \"button\", \"aria-expanded\", \"false\", \"aria-label\", \"Plus sign icon used to display or hide the items of a category  (aria label)\", \"alt\", \"Plus sign icon used to display or hide the items of a category  (alt text)\", \"tabindex\", \"0\", \"src\", \"./assets/pictures/256px-Font_Awesome_5_solid_plus-circle.svg.png\", 1, \"icon-plus\", \"border-02\", 3, \"id\"], [\"role\", \"listitem\", \"tabindex\", \"0\", 1, \"border-02\"], [1, \"toggle-item\", 3, \"id\"], [\"class\", \"no-list-style\", \"name\", \"anItem\", 3, \"id\", \"value\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"anItem\", 1, \"no-list-style\", 3, \"id\", \"value\"], [\"role\", \"button\", \"aria-label\", \"Trash can icon used to suppress an item in a category  (aria-label)\", \"alt\", \"Trash can icon used to suppress an item in a category  (alt text)\", \"tabindex\", \"0\", \"name\", \"anIconToDeleteAnItem\", \"src\", \"./assets/pictures/Ic_delete_48px.png\", 1, \"icon-garbage-can\", \"border-02\", 3, \"click\", \"keydown.enter\", \"keydown.space\"], [\"role\", \"listitem\", \"tabindex\", \"0\", 1, \"itemName\", \"border-02\"]],\n    template: function TodoListPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-navbar\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"form\", 2)(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Name of the category to add: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function TodoListPageComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.categoryInputName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"click\", function TodoListPageComponent_Template_input_click_8_listener() {\n          return ctx.addCategory();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"form\", 6)(11, \"select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function TodoListPageComponent_Template_select_ngModelChange_11_listener($event) {\n          return ctx.selectedCategoryId = $event;\n        })(\"click\", function TodoListPageComponent_Template_select_click_11_listener() {\n          return ctx.mark_selected(ctx.selectedCategoryId);\n        })(\"change\", function TodoListPageComponent_Template_select_change_11_listener() {\n          return ctx.mark_selected(ctx.selectedCategoryId);\n        })(\"keydown.enter\", function TodoListPageComponent_Template_select_keydown_enter_11_listener() {\n          return ctx.mark_selected(ctx.selectedCategoryId);\n        })(\"keydown.space\", function TodoListPageComponent_Template_select_keydown_space_11_listener() {\n          return ctx.mark_selected(ctx.selectedCategoryId);\n        });\n        i0.ɵɵelementStart(12, \"option\", 8);\n        i0.ɵɵtext(13, \" Please select an option \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, TodoListPageComponent_option_14_Template, 2, 3, \"option\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"label\", 10);\n        i0.ɵɵtext(17, \"Name of the item to add:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function TodoListPageComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.itemInputName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"br\");\n        i0.ɵɵelementStart(20, \"input\", 12);\n        i0.ɵɵlistener(\"click\", function TodoListPageComponent_Template_input_click_20_listener() {\n          return ctx.addItem(ctx.selectedCategoryId);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 13)(22, \"ul\");\n        i0.ɵɵtemplate(23, TodoListPageComponent_li_23_Template, 11, 9, \"li\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(24, \"a\", 15)(25, \"a\", 16);\n        i0.ɵɵelementStart(26, \"div\", 17)(27, \"h1\", 18);\n        i0.ɵɵtext(28, \"Credits:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"ul\")(30, \"li\", 19)(31, \"a\", 20);\n        i0.ɵɵelement(32, \"img\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(33, \" The trash can icon by Google Inc is licensed under a Creative Commons BY 4.0 license. No changes were made to the icon.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"li\", 19)(35, \"a\", 22);\n        i0.ɵɵelement(36, \"img\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(37, \" The plus sign icon by Font Awesome is licensed under a Creative Commons BY 4.0 license. No changes were made to the icon.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"li\", 19)(39, \"a\", 24);\n        i0.ɵɵtext(40, \" Link to the description of the Creative Commons BY 4.0 License \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(41, \"app-around-sdgs-communication\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.categoryInputName);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedCategoryId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.itemInputName);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.MinLengthValidator, i4.NgModel, i4.NgForm, i5.AroundSDGsCommunicationComponent, i6.NavbarComponent],\n    styles: [\"#display-area[_ngcontent-%COMP%]{font-size:xx-large;height:max-content;width:auto}#addition-area[_ngcontent-%COMP%]{text-align:center;font-size:2em}.h1-form[_ngcontent-%COMP%]{font-size:x-large;font-weight:400;padding-left:1em;margin-bottom:0}label[_ngcontent-%COMP%]{text-align:left;color:#001400;width:auto}.category[_ngcontent-%COMP%]{line-height:2em}li.no-list-style[_ngcontent-%COMP%]{list-style-type:none}.icon-garbage-can[_ngcontent-%COMP%]{width:1.5em;height:1.5em;position:relative;bottom:-.3em}.icon-garbage-can[_ngcontent-%COMP%]:focus{position:relative;bottom:-.5em}.icon-garbage-can-small[_ngcontent-%COMP%]{width:1em;height:1em;position:relative;left:-.1em;bottom:-.1em}.icon-plus[_ngcontent-%COMP%]{width:.8em;height:.8em;position:relative;left:-.4em}.icon-plus[_ngcontent-%COMP%]:focus{position:relative;bottom:-.2em}.icon-plus-small[_ngcontent-%COMP%]{width:.8em;height:.8em;position:relative;bottom:-.1em;margin-right:.2em}.toggle-item[_ngcontent-%COMP%]{visibility:visible;display:block;position:relative;left:2.3em}#credits[_ngcontent-%COMP%]{font-family:Arial,sans-serif;font-size:medium!important;position:relative;left:1em}#credits[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:x-large!important}#credits[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#000;text-decoration-line:none}.retriever-picture-credit[_ngcontent-%COMP%]{position:relative;left:.3em}\"]\n  });\n  return TodoListPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}